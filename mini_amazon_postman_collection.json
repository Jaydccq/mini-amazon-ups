{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID",
		"name": "Mini-Amazon API (Updated)",
		"description": "Updated Postman collection based on Mini-Amazon Flask API code.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Amazon Core",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "admin@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "remember_me",
									"value": "y",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from a GET request to the login page first if CSRF is enabled"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Logs in a user. Requires form data. Remember to handle CSRF token if enabled."
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstname",
									"value": "Test",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "User",
									"type": "text"
								},
								{
									"key": "email",
									"value": "test.user.{{$randomInt}}@example.com",
									"type": "text"
								},
								{
									"key": "address",
									"value": "123 Test St, Testville",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password123",
									"type": "text"
								},
								{
									"key": "password2",
									"value": "password123",
									"type": "text"
								},
								{
									"key": "terms",
									"value": "y",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from a GET request to the register page first if CSRF is enabled"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Registers a new user. Requires form data."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						},
						"description": "Logs out the current user."
					},
					"response": []
				},
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?search=Test&category_id=1&sort_by=price&sort_dir=desc&page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "search",
									"value": "Test",
									"description": "(Optional) Search term"
								},
								{
									"key": "category_id",
									"value": "1",
									"description": "(Optional) Filter by category ID"
								},
								{
									"key": "sort_by",
									"value": "price",
									"description": "(Optional) Sort field (name, price, newest)"
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "(Optional) Sort direction (asc, desc)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "(Optional) Page number for pagination"
								}
							]
						},
						"description": "Retrieves a list of products with optional filtering, sorting, and pagination."
					},
					"response": []
				},
				{
					"name": "Get Product Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							],
							"variable": [
								{
									"key": "product_id",
									"value": "101",
									"description": "ID of the product to retrieve"
								}
							]
						},
						"description": "Retrieves details for a specific product."
					},
					"response": []
				},
				{
					"name": "List Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders?status=Unfulfilled&page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "Unfulfilled",
									"description": "(Optional) Filter by order status (Unfulfilled, Fulfilled)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "(Optional) Page number"
								}
							]
						},
						"description": "Lists orders for the logged-in user. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Get Order Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/{{order_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{order_id}}"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "1",
									"description": "ID of the order to retrieve"
								}
							]
						},
						"description": "Retrieves details for a specific order. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Get Shipment Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/shipments/{{shipment_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipments",
								"{{shipment_id}}"
							],
							"variable": [
								{
									"key": "shipment_id",
									"value": "1",
									"description": "ID of the shipment to retrieve"
								}
							]
						},
						"description": "Retrieves details for a specific shipment. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Checkout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "destination_x",
									"value": "50",
									"type": "text"
								},
								{
									"key": "destination_y",
									"value": "50",
									"type": "text"
								},
								{
									"key": "ups_account",
									"value": "my_ups_acc",
									"type": "text",
									"description": "(Optional)"
								},
								{
									"key": "warehouse_id",
									"value": "1",
									"type": "text",
									"description": "(Optional) Selects nearest if omitted"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from the GET /checkout page first"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/checkout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"checkout"
							]
						},
						"description": "Processes the user's cart checkout. Requires authentication and form data."
					},
					"response": []
				},
				{
					"name": "Update Delivery Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "destination_x",
									"value": "75",
									"type": "text"
								},
								{
									"key": "destination_y",
									"value": "75",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from the order detail page first"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/orders/{{order_id}}/update_address/{{shipment_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{order_id}}",
								"update_address",
								"{{shipment_id}}"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "1"
								},
								{
									"key": "shipment_id",
									"value": "1"
								}
							]
						},
						"description": "Updates the delivery address for a specific shipment if eligible. Requires login."
					},
					"response": []
				}
			],
			"description": "Core routes for user interaction, products, orders."
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "View Cart",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cart/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								""
							]
						},
						"description": "Views the current user's shopping cart. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Add to Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "101",
									"type": "text"
								},
								{
									"key": "seller_id",
									"value": "1",
									"type": "text",
									"description": "ID of the seller (often the product owner)"
								},
								{
									"key": "quantity",
									"value": "2",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from the product detail or cart page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/cart/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								"add"
							]
						},
						"description": "Adds a product to the cart. Requires authentication and form data."
					},
					"response": []
				},
				{
					"name": "Update Cart Item Quantity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "101",
									"type": "text"
								},
								{
									"key": "seller_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "3",
									"type": "text",
									"description": "New quantity (must be >= 1)"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from the cart page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/cart/update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								"update"
							]
						},
						"description": "Updates the quantity of an item in the cart. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Remove from Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "101",
									"type": "text"
								},
								{
									"key": "seller_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get this from the cart page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/cart/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cart",
								"remove"
							]
						},
						"description": "Removes an item from the cart. Requires authentication."
					},
					"response": []
				}
			],
			"description": "Routes specific to shopping cart actions."
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "List User Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reviews/?sort_by=date&sort_order=desc&rating=5&recent=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								""
							],
							"query": [
								{
									"key": "sort_by",
									"value": "date",
									"description": "(Optional) Sort field (date, rating)",
									"disabled": true
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "(Optional) Sort order (asc, desc)",
									"disabled": true
								},
								{
									"key": "rating",
									"value": "5",
									"description": "(Optional) Filter by rating (1-5)",
									"disabled": true
								},
								{
									"key": "recent",
									"value": "0",
									"description": "(Optional) Show only recent 5 (1=yes, 0=no)",
									"disabled": true
								}
							]
						},
						"description": "Lists reviews written by the logged-in user. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Add Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "comment",
									"value": "This product was amazing!",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "5",
									"type": "text"
								},
								{
									"key": "review_type",
									"value": "product",
									"type": "text",
									"description": "'product' or 'seller'"
								},
								{
									"key": "product_id",
									"value": "101",
									"type": "text",
									"description": "Required if review_type is 'product'"
								},
								{
									"key": "seller_id",
									"value": "",
									"type": "text",
									"description": "Required if review_type is 'seller'",
									"disabled": true
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get from the add review page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reviews/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"add"
							]
						},
						"description": "Adds a new review for a product or seller. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Edit Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "comment",
									"value": "Actually, it was just okay.",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "3",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get from the edit review page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reviews/edit/{{review_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"edit",
								"{{review_id}}"
							],
							"variable": [
								{
									"key": "review_id",
									"value": "1",
									"description": "ID of the review to edit"
								}
							]
						},
						"description": "Edits an existing review. Requires authentication."
					},
					"response": []
				},
				{
					"name": "List Product Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reviews/product/{{product_id}}?sort_by=rating&sort_order=desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"product",
								"{{product_id}}"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "rating",
									"description": "(Optional) date or rating",
									"disabled": true
								},
								{
									"key": "sort_order",
									"value": "desc",
									"description": "(Optional) asc or desc",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "product_id",
									"value": "101"
								}
							]
						},
						"description": "Lists all reviews for a specific product."
					},
					"response": []
				},
				{
					"name": "List Seller Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reviews/seller/{{seller_id}}?sort_by=date&sort_order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"seller",
								"{{seller_id}}"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "date",
									"description": "(Optional) date or rating",
									"disabled": true
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "(Optional) asc or desc",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "seller_id",
									"value": "1"
								}
							]
						},
						"description": "Lists all reviews for a specific seller."
					},
					"response": []
				}
			],
			"description": "Routes for managing and viewing product/seller reviews."
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "List Warehouses (Admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/warehouses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"warehouses"
							]
						},
						"description": "Lists all warehouses. Requires admin/seller login."
					},
					"response": []
				},
				{
					"name": "Add Warehouse (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "x",
									"value": "25",
									"type": "text"
								},
								{
									"key": "y",
									"value": "75",
									"type": "text"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get from the add warehouse page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin/warehouses/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"warehouses",
								"add"
							]
						},
						"description": "Adds a new warehouse. Requires admin/seller login."
					},
					"response": []
				},
				{
					"name": "Connect to World (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "action",
									"value": "connect",
									"type": "text",
									"description": "'connect' or 'create'"
								},
								{
									"key": "world_id",
									"value": "123456789",
									"type": "text",
									"description": "Required if action is 'connect'"
								},
								{
									"key": "warehouse_ids",
									"value": "1",
									"type": "text",
									"description": "Required if action is 'create' (can be multiple)"
								},
								{
									"key": "sim_speed",
									"value": "500",
									"type": "text",
									"description": "(Optional)"
								},
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get from connect world page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin/connect-world",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"connect-world"
							]
						},
						"description": "Connects to an existing world or creates a new one. Requires admin/seller login."
					},
					"response": []
				},
				{
					"name": "Disconnect from World (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "csrf_token",
									"value": "{{csrf_token}}",
									"type": "text",
									"description": "Get from connect world page"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin/disconnect-world",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"disconnect-world"
							]
						},
						"description": "Disconnects from the world simulator. Requires admin/seller login."
					},
					"response": []
				}
			],
			"description": "Routes accessible only to admin/seller users."
		},
		{
			"name": "API",
			"item": [
				{
					"name": "Search Products (API)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/search?query=device&category_id=1&limit=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "device",
									"description": "(Optional)"
								},
								{
									"key": "category_id",
									"value": "1",
									"description": "(Optional)"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "(Optional)"
								}
							]
						},
						"description": "API endpoint for searching products."
					},
					"response": []
				},
				{
					"name": "List Warehouses (API)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/warehouses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"warehouses"
							]
						},
						"description": "API endpoint to list active warehouses. Requires login."
					},
					"response": []
				},
				{
					"name": "Shipment Status (API)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/shipments/{{shipment_id}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"shipments",
								"{{shipment_id}}",
								"status"
							],
							"variable": [
								{
									"key": "shipment_id",
									"value": "1"
								}
							]
						},
						"description": "API endpoint to get the status of a specific shipment. Requires login."
					},
					"response": []
				},
				{
					"name": "Tracking Info (API)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tracking/{{tracking_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tracking",
								"{{tracking_id}}"
							],
							"variable": [
								{
									"key": "tracking_id",
									"value": "YOUR_UPS_TRACKING_ID"
								}
							]
						},
						"description": "API endpoint to get shipment status using a UPS tracking ID."
					},
					"response": []
				}
			],
			"description": "Public or authenticated API endpoints (non-webhook)."
		},
		{
			"name": "Webhooks (External)",
			"item": [
				{
					"name": "World Event Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_type\": \"package_ready\", \n    \"event_data\": {\n        \"shipment_id\": {{shipment_id}} \n    },\n    \"seqnum\": 12345\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/world/event",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"world",
								"event"
							]
						},
						"description": "Webhook endpoint for receiving events from the World Simulator."
					},
					"response": []
				},
				{
					"name": "UPS Truck Arrived Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"truck_id\": 5, \n    \"warehouse_id\": 1,\n    \"seqnum\": 67890 \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ups/truck-arrived",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ups",
								"truck-arrived"
							]
						},
						"description": "Webhook endpoint for receiving truck arrival notifications from UPS."
					},
					"response": []
				},
				{
					"name": "UPS Package Delivered Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": {{shipment_id}},\n    \"seqnum\": 67891\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ups/package-delivered",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ups",
								"package-delivered"
							]
						},
						"description": "Webhook endpoint for receiving package delivered notifications from UPS."
					},
					"response": []
				},
				{
					"name": "UPS Tracking Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": {{shipment_id}},\n    \"tracking_id\": \"1Z999AA10123456784\",\n    \"seqnum\": 67892\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ups/tracking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ups",
								"tracking"
							]
						},
						"description": "Webhook endpoint for UPS to provide tracking numbers."
					},
					"response": []
				},
				{
					"name": "UPS Status Update Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shipment_id\": {{shipment_id}},\n    \"status\": \"delivering\",\n    \"seqnum\": 67893\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ups/status-update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ups",
								"status-update"
							]
						},
						"description": "Webhook endpoint for receiving status updates (like 'delivering') from UPS."
					},
					"response": []
				}
			],
			"description": "Endpoints designed to be called by external systems (World Simulator, UPS)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5001",
			"type": "string",
			"description": "Base URL for the Mini-Amazon application"
		},
		{
			"key": "product_id",
			"value": "101",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "shipment_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "seller_id",
			"value": "1",
			"type": "string",
			"description": "Usually the admin user ID if created by seeding"
		},
		{
			"key": "review_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "tracking_id",
			"value": "YOUR_UPS_TRACKING_ID",
			"type": "string"
		},
		{
			"key": "csrf_token",
			"value": "YOUR_CSRF_TOKEN",
			"type": "string",
			"description": "Needs to be obtained from relevant GET pages if CSRF is enabled"
		}
	]
}